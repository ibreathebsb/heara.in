{"data":{"site":{"siteMetadata":{"title":"Heara.in","author":"Isaac Young"}},"markdownRemark":{"id":"9959d087-02f7-5fbc-9160-3418ca48634f","html":"<p>懒是程序员的美德。本文以一个创建react组件的的node-cli小工具为例，介绍了从项目初始化到发布到npm的完整流程。</p>\n<!-- more -->\n<p>废话少说，开始干活！</p>\n<h2 id=\"需求\"><a href=\"#%E9%9C%80%E6%B1%82\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>需求</h2>\n<p>写过react项目的同学大概都有这样的经历：每次新创建一个组件都需要创建一个文件夹，然后创建三个文件,目录结构如下(假设使用sass和ts):</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">  \\MyComponent\n    - MyComponent.tsx\n    - index.ts\n    - MyComponent.scss</code></pre></div>\n<p>每次都这么写，是不是有点累了？起始我累了很久了！！终于下定决心不想继续累下去了，于是写了这个小工具，专门生成组件的的模版文件，同时考虑语言和react组件类型\n梳理了一下，我们这个小工具需要支持：</p>\n<ol>\n<li>两种语言<code class=\"language-text\">js</code>和<code class=\"language-text\">ts</code></li>\n<li>三种组件<code class=\"language-text\">React.Component</code>, <code class=\"language-text\">React.PureComponent</code>, <code class=\"language-text\">React.SFC</code>(即<code class=\"language-text\">Stateless functional component</code>)</li>\n</ol>\n<p>ok，需求已经搞清楚了，开始干活！</p>\n<h2 id=\"初始化\"><a href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>初始化</h2>\n<h3 id=\"创建目录\"><a href=\"#%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>创建目录</h3>\n<p>  <code class=\"language-text\">mkdir create-react-componnet &amp;&amp; cd create-react-componnet</code></p>\n<h3 id=\"初始化包信息\"><a href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8C%85%E4%BF%A1%E6%81%AF\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>初始化包信息</h3>\n<p>   <code class=\"language-text\">npm init</code></p>\n<h3 id=\"创建目录结构\"><a href=\"#%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>创建目录结构</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">\\create-react-component\n  README.MD\n  command.js // 处理命令行参数\n  create-react-component.js //主要逻辑处理\n  index.js //入口\n  node_modules\n  package.json\n  template //存放模版文件\n  utils //工具</code></pre></div>\n<h3 id=\"安装依赖\"><a href=\"#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装依赖</h3>\n<p>  这里使用<code class=\"language-text\">yarn</code>，当然也可以使用<code class=\"language-text\">npm</code>, <code class=\"language-text\">yarn add chalk commander</code></p>\n<h3 id=\"让代码跑起来\"><a href=\"#%E8%AE%A9%E4%BB%A3%E7%A0%81%E8%B7%91%E8%B5%B7%E6%9D%A5\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>让代码跑起来</h3>\n<p>  先整个hello world吧!</p>\n<p>  <code class=\"language-text\">create-react-component.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>  <code class=\"language-text\">index.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./create-react-component'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>打开终端,输入 <code class=\"language-text\">node index.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">Hello World!</code></pre></div>\n<p>这样我们的程序能够跑起来了！但是有个问题就是我们还不能像使用linux下的<code class=\"language-text\">mkdir</code>等命令一样执行我们的程序，咋整？</p>\n<p>首先给我们的<code class=\"language-text\">index.js</code>添加执行权限<code class=\"language-text\">chmod a+x index.js</code></p>\n<p>然后将文件的执行设置为使用node执行，这样一来我们能够使用<code class=\"language-text\">./index.js</code>来执行我们的文件了</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">#! /usr/bin/env node\n\nrequire(&#39;./create-react-component&#39;)()</code></pre></div>\n<p>然后为了其他用户能够在命令行中使用我们的小工具，需要更新下<code class=\"language-text\">package.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n   <span class=\"token property\">\"bin\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"create-react-component\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./index.js\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>当用户全局安装我们的npm包时，便可以使用<code class=\"language-text\">create-react-component</code>来执行我们的程序了，以下是我发布包后全局安装看到的结果</p>\n<p>可以看出<code class=\"language-text\">node</code>下的<code class=\"language-text\">bin</code>目录下的<code class=\"language-text\">create-react-component</code>是一个软链接文件，指向了我们的<code class=\"language-text\">index.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">➜  create-react-component git:(master) echo $PATH\n/Users/isaac/.nvm/versions/node/v8.11.1/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/Wireshark.app/Contents/MacOS\n\n➜  create-react-component git:(master) which create-react-component\n/Users/isaac/.nvm/versions/node/v8.11.1/bin/create-react-component\n\n➜  create-react-component git:(master) ls -l /Users/isaac/.nvm/versions/node/v8.11.1/bin/create-react-component\nlrwxr-xr-x  1 isaac  staff  61  8 25 14:48 /Users/isaac/.nvm/versions/node/v8.11.1/bin/create-react-component -&gt; ../lib/node_modules/@isaac.js/create-react-component/index.js</code></pre></div>\n<h2 id=\"编写主要逻辑\"><a href=\"#%E7%BC%96%E5%86%99%E4%B8%BB%E8%A6%81%E9%80%BB%E8%BE%91\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>编写主要逻辑</h2>\n<p> 思想很简单，无非是读取文件，然后根据用户输入的文件名，把我们的模版文件中的组件名称，文件名等等替换\n例如这是一个组件的模版:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">import * as React from &#39;react&#39;\nimport cStyle from &#39;./__REPLACE__.scss&#39;\n\ntype __REPLACE__Props = {}\ntype __REPLACE__State = {}\n\nexport class __REPLACE__ extends React.PureComponent&lt;__REPLACE__Props, __REPLACE__State&gt; {\n public render() {\n   return (\n     &lt;div className={cStyle.__REPLACE__}&gt;__REPLACE__&lt;/div&gt;\n   )\n }\n}</code></pre></div>\n<p>我们需要做的就是:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 读取文件内容</span>\n<span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  encoding<span class=\"token punctuation\">:</span> <span class=\"token string\">'UTF-8'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//将__REPLACE__替换为我们的组件名</span>\nfs<span class=\"token punctuation\">.</span><span class=\"token function\">writeFileSync</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token constant\">REPLACE</span><span class=\"token punctuation\">,</span> componentName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  encoding<span class=\"token punctuation\">:</span> <span class=\"token string\">'UTF-8'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"https://github.com/ibreathebsb/create-react-component\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">查看完整源码</a></p>\n<h2 id=\"发布\"><a href=\"#%E5%8F%91%E5%B8%83\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>发布</h2>\n<h3 id=\"没有npm账号自注册\"><a href=\"#%E6%B2%A1%E6%9C%89npm%E8%B4%A6%E5%8F%B7%E8%87%AA%E6%B3%A8%E5%86%8C\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>没有npm账号自<a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">注册</a></h3>\n<h3 id=\"登录npm账号\"><a href=\"#%E7%99%BB%E5%BD%95npm%E8%B4%A6%E5%8F%B7\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>登录npm账号</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">  npm login</code></pre></div>\n<h3 id=\"发布到npm\"><a href=\"#%E5%8F%91%E5%B8%83%E5%88%B0npm\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>发布到npm</h3>\n<p>npm包有两种，私有和公有，公有的包没有<code class=\"language-text\">@org</code>前缀，所以要抢注册名字，太麻烦，这里我们选择带有私有前缀的发布方式：</p>\n<ol>\n<li>在npm网站上创建组织,这里是<code class=\"language-text\">isaac.js</code></li>\n<li>在组织下创建包，这里是<code class=\"language-text\">create-react-component</code></li>\n<li>在项目根目录下 <code class=\"language-text\">npm publish --access public</code>， 发布成功</li>\n</ol>\n<h3 id=\"全局安装\"><a href=\"#%E5%85%A8%E5%B1%80%E5%AE%89%E8%A3%85\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>全局安装</h3>\n<p>等我们的包发布成功以后，便可以自己先安装一下</p>\n<p><code class=\"language-text\">npm i -g @isaac.js/create-react-component</code></p>\n<h2 id=\"最后\"><a href=\"#%E6%9C%80%E5%90%8E\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最后</h2>\n<p>贴一下包地址，欢迎体验！</p>\n<p><a href=\"https://www.npmjs.com/package/@isaac.js/create-react-component\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">npm</a>\n<a href=\"https://github.com/ibreathebsb/create-react-component\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github</a></p>","timeToRead":4,"frontmatter":{"title":"从零开始创建一个node-cli","date":"August 28, 2018","spoiler":null},"fields":{"slug":"/build-a-node-cli-from-scratch/"}}},"pageContext":{"slug":"/build-a-node-cli-from-scratch/","previous":{"fields":{"slug":"/position-absolute-and-overflow-scroll/","directoryName":"position-absolute-and-overflow-scroll"},"frontmatter":{"title":"css中position:absolute和overflow:scroll的坑"}},"next":{"fields":{"slug":"/three-mode-of-splitchunks-in-webpack4/","directoryName":"three-mode-of-splitchunks-in-webpack4"},"frontmatter":{"title":"理解webpack4中splitChunks的3种模式"}}}}